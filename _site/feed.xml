<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-06-22T17:15:23+08:00</updated><id>http://localhost:4000/</id><title type="html">quding0308’s blog</title><entry><title type="html">跨域问题总结</title><link href="http://localhost:4000/blog/2018/06/22/Access-Control-Cross-Origin.html" rel="alternate" type="text/html" title="跨域问题总结" /><published>2018-06-22T15:40:05+08:00</published><updated>2018-06-22T15:40:05+08:00</updated><id>http://localhost:4000/blog/2018/06/22/Access-Control-Cross-Origin</id><content type="html" xml:base="http://localhost:4000/blog/2018/06/22/Access-Control-Cross-Origin.html">&lt;h3 id=&quot;同源策略&quot;&gt;同源策略&lt;/h3&gt;
&lt;p&gt;两个页面地址中的协议、域名和端口号一致，则表示同源。&lt;/p&gt;

&lt;h3 id=&quot;跨域请求&quot;&gt;跨域请求&lt;/h3&gt;
&lt;p&gt;凡是发送url的scheme、host、port任一与当前页面地址不同，即为跨域。&lt;/p&gt;

&lt;h3 id=&quot;为了安全同源策略有以下限制&quot;&gt;为了安全，同源策略有以下限制：&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;存储在浏览器中的数据，如cookie、localStorage、indexDB不能通过脚本跨域访问。&lt;/li&gt;
  &lt;li&gt;不能通过脚本操作不同域下的dom&lt;/li&gt;
  &lt;li&gt;Ajax不能跨域请求数据&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;ajax跨域解决方案&quot;&gt;Ajax跨域解决方案：&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;jsonp 可以跨域发起get请求&lt;/li&gt;
  &lt;li&gt;iframe&lt;/li&gt;
  &lt;li&gt;后台服务器做代理(先将请求发送给后台服务器，通过服务器来发送请求，然后将请求的结果传递给前端。)&lt;/li&gt;
  &lt;li&gt;CORS (Cross-Origin Resource Sharing) W3C官方解决方案&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cors协议&quot;&gt;CORS协议&lt;/h3&gt;

&lt;p&gt;浏览器必须首先使用 OPTIONS 方法发起一个预检请求（preflight request），从而获知服务端是否允许该跨域请求。服务器确认允许之后，才发起实际的 HTTP 请求。&lt;/p&gt;

&lt;h4 id=&quot;cors协议中的options请求&quot;&gt;CORS协议中的OPTIONS请求&lt;/h4&gt;

&lt;p&gt;OPTIONS 是 HTTP/1.1 协议中定义的方法，用以从服务器获取更多信息。&lt;/p&gt;

&lt;p&gt;OPTIONS Request会携带两个首部字段：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 告知server，实际请求是POST
Access-Control-Request-Method: POST
// 告知Server，实际请求会携带两个自定义首部字段
Access-Control-Request-Headers: X-PINGOTHER, Content-Type
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;OPTIONS Response响应：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 允许指定域名进行跨域请求
Access-Control-Allow-Origin: http://foo.example
// 允许实际请求发起的METHOD
Access-Control-Allow-Methods: POST, GET, OPTIONS
// 允许携带的header
Access-Control-Allow-Headers: X-PINGOTHER, Content-Type
// 该响应有效时间，该时间内无法再次发起OPTIONS请求
Access-Control-Max-Age: 86400
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;OPTIONS成功请求后，会发送实际请求。&lt;/p&gt;

&lt;p&gt;跨域请求，会有一个请求头Origin，记录当前页面的域名。&lt;/p&gt;

&lt;p&gt;参考&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;CORS官方介绍：&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS&quot;&gt;https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/dojo-lzz/p/4265637.html&quot;&gt;https://www.cnblogs.com/dojo-lzz/p/4265637.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/hehexiaoxia/article/details/61916737&quot;&gt;https://blog.csdn.net/hehexiaoxia/article/details/61916737&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">同源策略 两个页面地址中的协议、域名和端口号一致，则表示同源。</summary></entry><entry><title type="html">Cache-Control使用总结</title><link href="http://localhost:4000/blog/http/2018/06/22/Cache-Control.html" rel="alternate" type="text/html" title="Cache-Control使用总结" /><published>2018-06-22T10:05:05+08:00</published><updated>2018-06-22T10:05:05+08:00</updated><id>http://localhost:4000/blog/http/2018/06/22/Cache-Control</id><content type="html" xml:base="http://localhost:4000/blog/http/2018/06/22/Cache-Control.html">&lt;h3 id=&quot;request中设置cache-control&quot;&gt;Request中设置Cache-Control&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;no-cache&lt;/li&gt;
  &lt;li&gt;no-store&lt;/li&gt;
  &lt;li&gt;max-age&lt;/li&gt;
  &lt;li&gt;max-stale&lt;/li&gt;
  &lt;li&gt;min-fresh&lt;/li&gt;
  &lt;li&gt;no-transform&lt;/li&gt;
  &lt;li&gt;only-if-cached&lt;/li&gt;
  &lt;li&gt;cache-extension&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;response中设置cache-control&quot;&gt;Response中设置Cache-control&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;public&lt;/li&gt;
  &lt;li&gt;private&lt;/li&gt;
  &lt;li&gt;no-cache&lt;/li&gt;
  &lt;li&gt;no-store&lt;/li&gt;
  &lt;li&gt;no-transform&lt;/li&gt;
  &lt;li&gt;max-age(单位s)&lt;/li&gt;
  &lt;li&gt;must-revalidate&lt;/li&gt;
  &lt;li&gt;s-maxage&lt;/li&gt;
  &lt;li&gt;cache-extension&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ios中request设置cachepolicy&quot;&gt;iOS中Request设置cachePolicy&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// NSURLRequestCachePolicy
// 使用网络协议中实现的缓存策略(Cache-Control)
NSURLRequestUseProtocolCachePolicy

// 不使用本地缓存，从server加载。如果一个资源设置了 setHeader('Cache-Control', 'public, max-age=3600')，可以用这种策略强制重新加载
NSURLRequestReloadIgnoringLocalCacheData

// 无论缓存是否过期，先使用本地缓存。如果没有缓存，才从server加载
NSURLRequestReturnCacheDataElseLoad

// 无论缓存是否过期，先使用本地缓存数据。如果缓存中没有请求所对应的数据，那么放弃从原始地址加载数据，请求视为失败
NSURLRequestReturnCacheDataDontLoad
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;wkwebvview与nsurlrequestcachepolicy配合使用&quot;&gt;WKWebvView与NSURLRequestCachePolicy配合使用&lt;/h3&gt;
&lt;h4 id=&quot;第一种情况&quot;&gt;第一种情况&lt;/h4&gt;
&lt;p&gt;html资源设置Cache-Control=’public, max-age=3600’，此时WKWebView第一次加载该html时会使用本地缓存，重新load时，会忽略Cache-Control，从server请求。WKWebView的request如果设置为NSURLRequestReloadIgnoringLocalCacheData，则html的第一次请求也会忽略本地缓存，从server请求。&lt;/p&gt;
&lt;h4 id=&quot;第二种情况&quot;&gt;第二种情况&lt;/h4&gt;
&lt;p&gt;html资源设置Cache-Control=’public, max-age=0’，此时WKWebView默认每次都会从server请求。如果WKWebView的请求设置为NSURLRequestReturnCacheDataElseLoad，则第一次请求会本地缓存，之后重新reload会请求server。&lt;/p&gt;
&lt;h4 id=&quot;第三中情况&quot;&gt;第三中情况&lt;/h4&gt;
&lt;p&gt;WKWebView的request设置为NSURLRequestReturnCacheDataDontLoad，如果本地没有缓存则第一次加载失败，reload会从server请求。如果本地有缓存，第一次会使用本地缓存，之后reload会请求server。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WKWebView中请求一个url，第一次加载会使用Cache-Control策略，之后在同一个WKWebView中在此加载这个url时Cache-Control策略无效，会请求server&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;etag的使用&quot;&gt;ETag的使用&lt;/h3&gt;
&lt;p&gt;response中的header中返回的字段”ETag”=”af-k59S5WU6TaRZGFycLip4kzlBkQ8”，由server产生，作为资源实体的hash值 返回给client。&lt;/p&gt;

&lt;p&gt;发起reqeust时，可以在header中设置If-None-Match字段，把之前的ETag字段传给server，server比较ETag字段，如果相等则返回304，告知client使用本地缓存（不用返回数据，节省流量，加快请求速度）。&lt;/p&gt;

&lt;p&gt;ETag的优先级高于Last-Modified&lt;/p&gt;

&lt;p&gt;304 Not Modified&lt;/p&gt;

&lt;h3 id=&quot;last-modified-和-if-modified-since&quot;&gt;Last-Modified 和 If-Modified-Since&lt;/h3&gt;

&lt;p&gt;Last-Modified与Etag类似，Last-Modified表示响应资源在服务器最后修改时间。&lt;/p&gt;

&lt;p&gt;response 返回Last-Modified，资源的最后修改时间。
request 在header中带参数If-Modified-Since，把上一次获取的Last-Modified数据返回给server，server
通过比较时间，决定是否返回304.&lt;/p&gt;

&lt;p&gt;Last-Modified相比ETag有比几个不足：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Last-Modified标注的最后修改只能精确到秒级，如果某些文件在1秒钟以内，被修改多次的话，它将不能准确标注文件的修改时间&lt;/li&gt;
  &lt;li&gt;如果某些文件会被定期生成，当有时内容并没有任何变化，但Last-Modified却改变了，导致文件没法使用缓存&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://nshipster.cn/nsurlcache/&quot;&gt;http://nshipster.cn/nsurlcache/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9&quot;&gt;https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/softidea/p/5986339.html&quot;&gt;https://www.cnblogs.com/softidea/p/5986339.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Request中设置Cache-Control no-cache no-store max-age max-stale min-fresh no-transform only-if-cached cache-extension</summary></entry><entry><title type="html">Markdown使用</title><link href="http://localhost:4000/blog/2018/06/11/markdown.html" rel="alternate" type="text/html" title="Markdown使用" /><published>2018-06-11T10:05:05+08:00</published><updated>2018-06-11T10:05:05+08:00</updated><id>http://localhost:4000/blog/2018/06/11/markdown</id><content type="html" xml:base="http://localhost:4000/blog/2018/06/11/markdown.html">&lt;h3 id=&quot;markdown语法&quot;&gt;Markdown语法&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;标题、正文 快捷键显示&lt;/li&gt;
  &lt;li&gt;图片&lt;/li&gt;
  &lt;li&gt;代码 四个空格所进的行&lt;/li&gt;
  &lt;li&gt;断行  在行尾输入两个以上空格，然后回车&lt;/li&gt;
  &lt;li&gt;引用 在引用的段落开头加上右尖括号&lt;/li&gt;
  &lt;li&gt;水平分区线   单独一行里有3个以上星号&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;引用&quot;&gt;引用&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;这是一段引用文字，测试用
这是一段引用文字&lt;/p&gt;

  &lt;p&gt;这是一段引用文字&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;代码&quot;&gt;代码&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let x: Int = 0
var y = x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;图片&quot;&gt;图片&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;http://iconfont.alicdn.com/t/1527089172740.jpg@200h_200w.jpg&quot; alt=&quot;这是一个图片，替代文字&quot; /&gt;&lt;/p&gt;

&lt;p&gt;wiki地址：&lt;a href=&quot;https://zh.wikipedia.org/wiki/Markdown&quot;&gt;https://zh.wikipedia.org/wiki/Markdown&lt;/a&gt; &lt;br /&gt;
参考：&lt;a href=&quot;http://wowubuntu.com/markdown/#code&quot;&gt;http://wowubuntu.com/markdown/#code&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;vscode中markdown-all-in-one插件的使用&quot;&gt;VSCode中Markdown All in One插件的使用&lt;/h3&gt;

&lt;h4 id=&quot;快捷键&quot;&gt;快捷键&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;加粗 command + b&lt;/li&gt;
  &lt;li&gt;斜体 command + i&lt;/li&gt;
  &lt;li&gt;字体加横线 option + s&lt;/li&gt;
  &lt;li&gt;标题 ctrl + shift + [ 或 ctrl + shift + ]&lt;/li&gt;
  &lt;li&gt;进入math环境 ctrol + m
    &lt;ul&gt;
      &lt;li&gt;$x + y = z$&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;task-list&quot;&gt;Task List&lt;/h4&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;task1 to do&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;task2 finished&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;插件地址：&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one&quot;&gt;https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Markdown语法 标题、正文 快捷键显示 图片 代码 四个空格所进的行 断行 在行尾输入两个以上空格，然后回车 引用 在引用的段落开头加上右尖括号 水平分区线 单独一行里有3个以上星号</summary></entry><entry><title type="html">常用英文及缩写</title><link href="http://localhost:4000/blog/2018/06/10/%E5%B8%B8%E7%94%A8%E8%8B%B1%E8%AF%AD%E5%8F%8A%E7%BC%A9%E5%86%99.html" rel="alternate" type="text/html" title="常用英文及缩写" /><published>2018-06-10T10:05:05+08:00</published><updated>2018-06-10T10:05:05+08:00</updated><id>http://localhost:4000/blog/2018/06/10/%E5%B8%B8%E7%94%A8%E8%8B%B1%E8%AF%AD%E5%8F%8A%E7%BC%A9%E5%86%99</id><content type="html" xml:base="http://localhost:4000/blog/2018/06/10/%E5%B8%B8%E7%94%A8%E8%8B%B1%E8%AF%AD%E5%8F%8A%E7%BC%A9%E5%86%99.html">&lt;h4 id=&quot;常用缩写&quot;&gt;常用缩写&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A
average ——&amp;gt; avg

B
back ——&amp;gt; bk
background ——&amp;gt; bg
break ——&amp;gt; brk
buffer ——&amp;gt; buf

C
color ——&amp;gt; cr(clr)
control ——&amp;gt; ctrl

D
data ——&amp;gt; dat
delete ——&amp;gt; del
document ——&amp;gt; doc

E
edit ——&amp;gt; edt
error ——&amp;gt; err
escape ——&amp;gt; esc

F
flag ——&amp;gt; flg
form ——&amp;gt; frm

G
grid ——&amp;gt; grd

I
increment ——&amp;gt; inc
information ——&amp;gt; info
initial ——&amp;gt; init
insert ——&amp;gt; ins
image ——&amp;gt; img

L
label ——&amp;gt; lab
length ——&amp;gt; len
list ——&amp;gt; lst
library ——&amp;gt; lib

M
manager ——&amp;gt; mngr(mgr)
message ——&amp;gt; msg

O
Oracle ——&amp;gt; Ora

P
panorama ——&amp;gt; pano
password ——&amp;gt; pwd
picture ——&amp;gt; pic
point ——&amp;gt; pt
position ——&amp;gt; pos
print ——&amp;gt; prn
program ——&amp;gt; prg

S
server ——&amp;gt; srv
source ——&amp;gt; src
statistic ——&amp;gt; stat
string ——&amp;gt; str
Sybase ——&amp;gt; Syb

T
temp ——&amp;gt; tmp
text ——&amp;gt; txt

U
user ——&amp;gt; usr

W
window ——&amp;gt; wnd(win)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;通用缩写表&quot;&gt;通 用 缩 写 表&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;缩 写	全 称
addr	Address
adm	Administrator
app	Application
arg	Argument
asm	assemble
asyn	asynchronization
avg	average
DB	Database
bk	back
bmp	Bitmap
btn	Button
buf	Buffer
calc	Calculate
char	Character
chg	Change
clk	Click
clr	color
cmd	Command
cmp	Compare
col	Column
coord	coordinates
cpy	copy
ctl / ctrl	Control
cur	Current
cyl	Cylinder
dbg	Debug
dbl	Double
dec	Decrease
def	default
del	Delete
dest / dst	Destination
dev	Device
dict	dictionary
diff	different
dir	directory
disp	Display
div	Divide
缩 写	全 称
dlg	Dialog
doc	Document
drv	Driver
dyna	Dynamic
env	Environment
err	error
ex/ext	Extend
exec	execute
flg	flag
frm	Frame
func / fn	Function
grp	group
horz	Horizontal
idx / ndx	Index
img	Image
impl	Implement
inc	Increase
info	Information
init	Initial/Initialize/Initialization
ins	Insert
inst	Instance
INT / intr	Interrupt
len	Length
lib	Library
lnk	Link
log	logical
lst	List
max	maximum
mem	Memory
mgr / man	Manage / Manager
mid	middle
min	minimum
msg	Message
mul	Multiply
num	Number
obj	Object
ofs	Offset
org	Origin / Original
param	Parameter
pic	picture
pkg	package
pnt / pt	Point
pos	Position
pre / prev	previous
缩 写	全 称
prg	program
prn	Print
proc	Process / Procedure
prop	Properties
psw	Password
ptr	Pointer
pub	Public
rc	rect
ref	Reference
reg	Register
req	request
res	Resource
ret	return
rgn	region
scr	screen
sec	Second
seg	Segment
sel	Select
src	Source
std	Standard
stg	Storage
stm	Stream
str	String
sub	Subtract
sum	summation
svr	Server
sync	Synchronization
sys	System
tbl	Table
temp / tmp	Temporary
tran / trans	translate/transation/transparent
tst	Test
txt	text
unk	Unknown
upd	Update
upg	Upgrade
util	Utility
var	Variable
ver	Version
vert	Vertical
vir	Virus
wnd	Window
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">常用缩写 A average ——&amp;gt; avg</summary></entry></feed>